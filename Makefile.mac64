OBJDIR=./build/mac

include version.mak
include Makefile.common

TARGET=build/mac.xpl
TARGET_arm=$(OBJDIR)/mac.xpl_arm
TARGET_x86=$(OBJDIR)/mac.xpl_x86

MYLIB_arm=$(OBJDIR)/libsnow_arm.a
MYLIB_x86=$(OBJDIR)/libsnow_x86.a

HEADERS=$(wildcard *.h)
OBJECTS_arm:=$(addprefix $(OBJDIR)/, $(SOURCES_CPP:.cpp=.o_arm)) $(addprefix $(OBJDIR)/, $(SOURCES_C:.c=.o_arm))
OBJECTS_x86=$(OBJECTS_arm:.o_arm=.o_x86)

# all sources to the dep files
DEPFILES=$(SOURCES_CPP:%.cpp=$(DEPDIR)/%.d) $(SOURCES_C:%.c=$(DEPDIR)/%.d)

DEPDIR := $(OBJDIR)/.deps
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.d

# if we run this script on Linux we it's osxcross 
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
    CCx=clang -target x86_64-apple-macos11
    CCa=clang -target arm64-apple-macos11

    CXXx=clang++ -target x86_64-apple-macos11
    CXXa=clang++ -target arm64-apple-macos11
else
    PATH:=/osxcross/target/bin:$(PATH)
    CCx=o64-clang -mmacosx-version-min=12.0
    CCa=oa64-clang -mmacosx-version-min=12.0

    CXXx=o64-clang++ -mmacosx-version-min=12.0
    CXXa=oa64-clang++ -mmacosx-version-min=12.0
endif

DEFS=-DAPL=1 -fPIC -fno-stack-protector -fvisibility=hidden

CFLAGS+=$(OPT) -Wall $(INCLUDES) $(DEBUG) -DVERSION=\"$(VERSION)\" $(DEFS)
CXXFLAGS=$(CXXSTD) $(CFLAGS)

LNFLAGS+=-dynamiclib -shared -rdynamic -fvisibility=hidden -Wl,-exported_symbols_list -Wl,linkscript.mac

# https://pewpewthespells.com/blog/static_and_dynamic_libraries.html
LIBS= $(MYLIB) -F $(SDK)/Libraries/Mac -framework XPLM -lcurl -lz

#test:
#    $(foreach var,$(.VARIABLES),$(info $(var) = $($(var))))

all: $(TARGET) grib_test.mac
    $(shell [ -d $(OBJDIR) ] || mkdir -p $(OBJDIR))

$(MYLIB_arm): $(OBJECTS_arm)
	llvm-ar cr $@ $^

$(MYLIB_x86): $(OBJECTS_x86)
	llvm-ar cr $@ $^

$(OBJDIR)/%.o_arm: %.cpp version.mak
	$(CXXa) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_x86: %.cpp  version.mak
	$(CXXx) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_arm: %.c version.mak
	$(CCa) $(CFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_x86: %.c  version.mak
	$(CCx) $(CFLAGS) -o $@ -c $<

$(TARGET_arm): $(MYLIB_arm)
	$(CXXa) -o $@ $(OBJDIR)/xa-snow.o_arm $(MYLIB_arm) $(LNFLAGS) $(LIBS)

$(TARGET_x86): $(MYLIB_x86)
	$(CXXx) -o $@ $(OBJDIR)/xa-snow.o_x86 $(MYLIB_x86) $(LNFLAGS) $(LIBS)

$(TARGET): $(TARGET_arm) $(TARGET_x86)
	lipo -create -output $@ $(TARGET_arm) $(TARGET_x86)

$(OBJDIR)/grib_test.mac_arm: $(MYLIB_arm) grib_test.cpp log_msg.cpp
	$(CXXa) $(CXXFLAGS) -DLOCAL_DEBUGSTRING -o $@ grib_test.cpp log_msg.cpp $(MYLIB_arm) -lcurl -lz

$(OBJDIR)/grib_test.mac_x86: $(MYLIB_x86) grib_test.cpp log_msg.cpp
	$(CXXx) $(CXXFLAGS) -DLOCAL_DEBUGSTRING -o $@ grib_test.cpp log_msg.cpp $(MYLIB_x86) -lcurl -lz

grib_test.mac: $(OBJDIR)/grib_test.mac_arm $(OBJDIR)/grib_test.mac_x86
	lipo -create -output $@ $(OBJDIR)/grib_test.mac_arm $(OBJDIR)/grib_test.mac_x86
  
$(DEPDIR): ; @mkdir -p $@

$(DEPFILES):
include $(wildcard $(DEPFILES))

clean:
	rm -f $(TARGET) $(OBJDIR)/*.o_* $(OBJDIR)/*.xpl_* $(OBJDIR)/*.a
